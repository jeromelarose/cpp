/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Ice.hpp                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jelarose <jelarose@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2020/12/03 10:14:48 by jelarose          #+#    #+#             */
/*   Updated: 2020/12/03 10:14:50 by jelarose         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef ICE_HPP
#define ICE_HPP

#include <string>
#include <iostream>
#include <ostream>
#include "AMateria.hpp"
#include "ICharacter.hpp"

class Ice;

class Ice : public AMateria
{
    
public:

////////////////////////////////////////////////////
//              CONSTRUCTEUR    
////////////////////////////////////////////////////

    Ice();

////////////////////////////////////////////////////
//              CONSTRUCTEUR DE COPIE
////////////////////////////////////////////////////

    Ice(Ice const &ice);

////////////////////////////////////////////////////
//              DESTRUCTEUR    
////////////////////////////////////////////////////

    virtual ~Ice();

////////////////////////////////////////////////////
//              ACCESSEURS   
////////////////////////////////////////////////////


////////////////////////////////////////////////////
//              OPERATEUR D'ASSIGNATION
////////////////////////////////////////////////////

    Ice &operator=(const Ice &ice);

////////////////////////////////////////////////////
//              METHODES
////////////////////////////////////////////////////

    virtual AMateria* clone() const;
    virtual void use(ICharacter& target);


////////////////////////////////////////////////////
//              ATTRIBUTS
////////////////////////////////////////////////////

};


#endif
