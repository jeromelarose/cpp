/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Ice.cpp                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jelarose <jelarose@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2020/12/03 10:14:39 by jelarose          #+#    #+#             */
/*   Updated: 2020/12/03 10:14:41 by jelarose         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "Ice.hpp"

////////////////////////////////////////////////////
//              CONSTRUCTEUR    
////////////////////////////////////////////////////

    Ice::Ice() : AMateria("ice")
    {   
    }

////////////////////////////////////////////////////
//              CONSTRUCTEUR DE COPIE
////////////////////////////////////////////////////

    Ice::Ice(Ice const &ice) :  AMateria(ice)
    {
        if (this != &ice)
            setXP(ice.getXP());
    }

////////////////////////////////////////////////////
//              DESTRUCTEUR    
////////////////////////////////////////////////////

    Ice::~Ice()
    {
    }

////////////////////////////////////////////////////
//              ACCESSEURS   
////////////////////////////////////////////////////


////////////////////////////////////////////////////
//              OPERATEUR D'ASSIGNATION
////////////////////////////////////////////////////

    Ice &Ice::operator=(const Ice &ice)
    {
        if (this == &ice)
            return (*this);
        setXP(ice.getXP());
      
        return (*this);
    }

////////////////////////////////////////////////////
//              METHODES
////////////////////////////////////////////////////

    AMateria* Ice::clone() const
    {
        AMateria *ret = new Ice(*this);
        return (ret);
       return (new Ice());
    }

    void Ice::use(ICharacter& target)
    {
        AMateria::use(target);
        std::cout << "* shoots an ice bolt at " + target.getName() + " *" << std::endl;
    }
