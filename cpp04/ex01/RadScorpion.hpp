/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   RadScorpion.hpp                                    :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jelarose <jelarose@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2020/12/03 09:15:20 by jelarose          #+#    #+#             */
/*   Updated: 2020/12/03 09:15:21 by jelarose         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef RADSCORPION_HPP
#define RADSCORPION_HPP

#include <string>
#include <iostream>
#include <ostream>
#include "Enemy.hpp"

class RadScorpion : public Enemy
{
    
public:

////////////////////////////////////////////////////
//              CONSTRUCTEUR    
////////////////////////////////////////////////////

    RadScorpion();

////////////////////////////////////////////////////
//              CONSTRUCTEUR DE COPIE
////////////////////////////////////////////////////

    RadScorpion(RadScorpion const &radScorpion);

////////////////////////////////////////////////////
//              DESTRUCTEUR    
////////////////////////////////////////////////////

    virtual ~RadScorpion();

////////////////////////////////////////////////////
//              ACCESSEURS   
////////////////////////////////////////////////////

////////////////////////////////////////////////////
//              OPERATEUR D'ASSIGNATION
////////////////////////////////////////////////////

////////////////////////////////////////////////////
//              METHODES
////////////////////////////////////////////////////

    void takeDamage(int);

private:

////////////////////////////////////////////////////
//              ATTRIBUTS
////////////////////////////////////////////////////

};

////////////////////////////////////////////////////
//              OPERATEUR DE FLUX
////////////////////////////////////////////////////

#endif
