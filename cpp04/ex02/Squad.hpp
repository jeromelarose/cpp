/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Squad.hpp                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jelarose <jelarose@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2020/12/03 10:00:13 by jelarose          #+#    #+#             */
/*   Updated: 2020/12/03 10:00:15 by jelarose         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef SQUAD_HPP
#define SQUAD_HPP

#include <string>
#include <iostream>
#include <ostream>
#include "ISquad.hpp"
#include "ISpaceMarine.hpp"

class Squad : public ISquad
{
    
public:

////////////////////////////////////////////////////
//              CONSTRUCTEUR    
////////////////////////////////////////////////////

    Squad();

////////////////////////////////////////////////////
//              CONSTRUCTEUR DE COPIE
////////////////////////////////////////////////////

    Squad(Squad const &squad);

////////////////////////////////////////////////////
//              DESTRUCTEUR    
////////////////////////////////////////////////////

    virtual ~Squad();

////////////////////////////////////////////////////
//              ACCESSEURS   
////////////////////////////////////////////////////

int             getCount() const;
ISpaceMarine    *getUnit(int) const;

////////////////////////////////////////////////////
//              OPERATEUR D'ASSIGNATION
////////////////////////////////////////////////////

    Squad &operator=(const Squad &squad);

////////////////////////////////////////////////////
//              METHODES
////////////////////////////////////////////////////

int             push(ISpaceMarine*);

private:

////////////////////////////////////////////////////
//              ATTRIBUTS
////////////////////////////////////////////////////

    int             m_count;
    ISpaceMarine    **m_tab;

////////////////////////////////////////////////////
//              METHODES
////////////////////////////////////////////////////

    void    clean();
};

#endif
